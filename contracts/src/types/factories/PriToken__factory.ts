/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriToken, PriTokenInterface } from "../PriToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f507269646520546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f50524900000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200040f565b508060049080519060200190620000af9291906200040f565b505050620000e67ffebeeb7a5960eb9fe1e26a7a7a97293f4f0bfac13135d5b4868ab07e7bb7eb5960001b6200028960201b60201c565b6200011a7f2dbdeb9b0243ed5675b6c120f664ac7f8742b43d0659aec2432e5a3d31b8c0bd60001b6200028960201b60201c565b6200014e7f49cb23f23a173f90391231fffb05d4acfb1d7d0f1671ca96d8a1ca21f2f2486260001b6200028960201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001c37f27be0d9b389aa3766bc55b17856271edb53862ffd7a022ae6e2ab3918b4c080e60001b6200028960201b60201c565b620001f77ffb09f9821c426676c10e8a7eef5ac00af9da729f8a35fe63ff59fd699df104c560001b6200028960201b60201c565b60006b033b2e3c9fd0803ce800000090506200023c7f588a63c64a4eb3e70fa35290b82024219a4dafbf810519af40baf40f43fe639360001b6200028960201b60201c565b620002707f69a5d25f81ad5ae6db93f2c2729c35301201fd24918bac7737c6449318a52d5860001b6200028960201b60201c565b6200028233826200028c60201b60201c565b506200065d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002f69062000512565b60405180910390fd5b62000313600083836200040560201b60201c565b806002600082825462000327919062000562565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200037e919062000562565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003e5919062000534565b60405180910390a362000401600083836200040a60201b60201c565b5050565b505050565b505050565b8280546200041d90620005c9565b90600052602060002090601f0160209004810192826200044157600085556200048d565b82601f106200045c57805160ff19168380011785556200048d565b828001600101855582156200048d579182015b828111156200048c5782518255916020019190600101906200046f565b5b5090506200049c9190620004a0565b5090565b5b80821115620004bb576000816000905550600101620004a1565b5090565b6000620004ce601f8362000551565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6200050c81620005bf565b82525050565b600060208201905081810360008301526200052d81620004bf565b9050919050565b60006020820190506200054b600083018462000501565b92915050565b600082825260208201905092915050565b60006200056f82620005bf565b91506200057c83620005bf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005b457620005b3620005ff565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620005e257607f821691505b60208210811415620005f957620005f86200062e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611c14806200066d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b411461025f578063a457c2d71461027d578063a9059cbb146102ad578063dd62ed3e146102dd576100ea565b806342966c68146101f557806370a08231146102115780638da5cb5b14610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b6040516101049190611829565b60405180910390f35b610127600480360381019061012291906112dd565b61039f565b604051610134919061180e565b60405180910390f35b6101456103bd565b60405161015291906119ab565b60405180910390f35b6101756004803603810190610170919061128e565b6103c7565b604051610182919061180e565b60405180910390f35b6101936104bf565b6040516101a091906119c6565b60405180910390f35b6101c360048036038101906101be91906112dd565b6104c8565b6040516101d0919061180e565b60405180910390f35b6101f360048036038101906101ee91906112dd565b610574565b005b61020f600480360381019061020a9190611319565b610746565b005b61022b60048036038101906102269190611229565b6107d7565b60405161023891906119ab565b60405180910390f35b61024961081f565b60405161025691906117f3565b60405180910390f35b610267610845565b6040516102749190611829565b60405180910390f35b610297600480360381019061029291906112dd565b6108d7565b6040516102a4919061180e565b60405180910390f35b6102c760048036038101906102c291906112dd565b6109c2565b6040516102d4919061180e565b60405180910390f35b6102f760048036038101906102f29190611252565b6109e0565b60405161030491906119ab565b60405180910390f35b60606003805461031c90611b0f565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611b0f565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b60006103b36103ac610a67565b8484610a6f565b6001905092915050565b6000600254905090565b60006103d4848484610c3a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061041f610a67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561049f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610496906118eb565b60405180910390fd5b6104b3856104ab610a67565b858403610a6f565b60019150509392505050565b60006012905090565b600061056a6104d5610a67565b8484600160006104e3610a67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461056591906119fd565b610a6f565b6001905092915050565b6105a07f9e9141c308aac74fe4d263727e6fc1efe354d79b235a213b6a21a4a06a36a91560001b610ebb565b6105cc7f98895e45f5243e3daa4d074c1516f554ddb78e7941bc98a800a40a3a3511609f60001b610ebb565b6105f87f4229f76701365cc62fedba4dd680e551bc7bda42872e6f56aebdd8880c8b57e860001b610ebb565b6106247f439f9c94ec727a4236b5efb553e21e6b87cb82b32f5ee4d3bf5461f51d12d4c760001b610ebb565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab9061184b565b60405180910390fd5b6106e07fab4ad06235335ca720a1b58345e7edc3bc7dd1e5d2967bd7eb34bc6c378cb5ae60001b610ebb565b61070c7f5c3fd6f1104b9aa5024efa464ff0bc9cfa8c9f801810a6b6c7a44515a5d288ce60001b610ebb565b6107387fc9cb043123807ab7c6dd2943676de64e5acefc609974b692fa2616a05abb402e60001b610ebb565b6107428282610ebe565b5050565b6107727fa5e081e039705ddcd514723664ab29d11743f1b04521bd87ecb689759a672e3460001b610ebb565b61079e7f0b0c1d958e1f48e5695e60bd84a2d1b356d992bd49c265ed9e21161c9fcd7db460001b610ebb565b6107ca7f2a5589c240bf3b362f2834298b45be9fc95b2f1332e477269ce7500e122c46da60001b610ebb565b6107d4338261101e565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461085490611b0f565b80601f016020809104026020016040519081016040528092919081815260200182805461088090611b0f565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b5050505050905090565b600080600160006108e6610a67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a9061196b565b60405180910390fd5b6109b76109ae610a67565b85858403610a6f565b600191505092915050565b60006109d66109cf610a67565b8484610c3a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad69061194b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b46906118ab565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c2d91906119ab565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca19061192b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d119061186b565b60405180910390fd5b610d258383836111f5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da2906118cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e3e91906119fd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ea291906119ab565b60405180910390a3610eb58484846111fa565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f259061198b565b60405180910390fd5b610f3a600083836111f5565b8060026000828254610f4c91906119fd565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa191906119fd565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161100691906119ab565b60405180910390a361101a600083836111fa565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561108e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110859061190b565b60405180910390fd5b61109a826000836111f5565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611120576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111179061188b565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546111779190611a53565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111dc91906119ab565b60405180910390a36111f0836000846111fa565b505050565b505050565b505050565b60008135905061120e81611bb0565b92915050565b60008135905061122381611bc7565b92915050565b60006020828403121561123b57600080fd5b6000611249848285016111ff565b91505092915050565b6000806040838503121561126557600080fd5b6000611273858286016111ff565b9250506020611284858286016111ff565b9150509250929050565b6000806000606084860312156112a357600080fd5b60006112b1868287016111ff565b93505060206112c2868287016111ff565b92505060406112d386828701611214565b9150509250925092565b600080604083850312156112f057600080fd5b60006112fe858286016111ff565b925050602061130f85828601611214565b9150509250929050565b60006020828403121561132b57600080fd5b600061133984828501611214565b91505092915050565b61134b81611a87565b82525050565b61135a81611a99565b82525050565b600061136b826119e1565b61137581856119ec565b9350611385818560208601611adc565b61138e81611b9f565b840191505092915050565b60006113a66021836119ec565b91507f4d696e74696e6720697320616c6c6f776564206f6e6c79206279206f776e657260008301527f2e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061140c6023836119ec565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114726022836119ec565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114d86022836119ec565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061153e6026836119ec565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115a46028836119ec565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061160a6021836119ec565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116706025836119ec565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116d66024836119ec565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061173c6025836119ec565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006117a2601f836119ec565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6117de81611ac5565b82525050565b6117ed81611acf565b82525050565b60006020820190506118086000830184611342565b92915050565b60006020820190506118236000830184611351565b92915050565b600060208201905081810360008301526118438184611360565b905092915050565b6000602082019050818103600083015261186481611399565b9050919050565b60006020820190508181036000830152611884816113ff565b9050919050565b600060208201905081810360008301526118a481611465565b9050919050565b600060208201905081810360008301526118c4816114cb565b9050919050565b600060208201905081810360008301526118e481611531565b9050919050565b6000602082019050818103600083015261190481611597565b9050919050565b60006020820190508181036000830152611924816115fd565b9050919050565b6000602082019050818103600083015261194481611663565b9050919050565b60006020820190508181036000830152611964816116c9565b9050919050565b600060208201905081810360008301526119848161172f565b9050919050565b600060208201905081810360008301526119a481611795565b9050919050565b60006020820190506119c060008301846117d5565b92915050565b60006020820190506119db60008301846117e4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a0882611ac5565b9150611a1383611ac5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a4857611a47611b41565b5b828201905092915050565b6000611a5e82611ac5565b9150611a6983611ac5565b925082821015611a7c57611a7b611b41565b5b828203905092915050565b6000611a9282611aa5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611afa578082015181840152602081019050611adf565b83811115611b09576000848401525b50505050565b60006002820490506001821680611b2757607f821691505b60208210811415611b3b57611b3a611b70565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611bb981611a87565b8114611bc457600080fd5b50565b611bd081611ac5565b8114611bdb57600080fd5b5056fea264697066735822122037128dbda1ba965262ffea8716d8f119610e8a31a88120c4597b0536a8a4ca7464736f6c63430008000033";

type PriTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriToken__factory extends ContractFactory {
  constructor(...args: PriTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriToken> {
    return super.deploy(overrides || {}) as Promise<PriToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriToken {
    return super.attach(address) as PriToken;
  }
  connect(signer: Signer): PriToken__factory {
    return super.connect(signer) as PriToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriTokenInterface {
    return new utils.Interface(_abi) as PriTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriToken {
    return new Contract(address, _abi, signerOrProvider) as PriToken;
  }
}
