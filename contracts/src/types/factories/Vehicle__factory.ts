/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vehicle, VehicleInterface } from "../Vehicle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "driver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "string",
            name: "RC",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicleImages",
            type: "string",
          },
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "_vehicle",
        type: "tuple",
      },
    ],
    name: "addVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "driver",
        type: "address",
      },
    ],
    name: "getVehicle",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "string",
            name: "RC",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicleImages",
            type: "string",
          },
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "driver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "string",
            name: "RC",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicleImages",
            type: "string",
          },
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "_vehicle",
        type: "tuple",
      },
    ],
    name: "updateVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114d98061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806349d883831461006757806364116aa814610083578063715018a61461009f5780638da5cb5b146100a9578063a93ab101146100c7578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190611010565b610113565b005b61009d60048036038101906100989190611010565b61040a565b005b6100a7610701565b005b6100b1610789565b6040516100be91906111f4565b60405180910390f35b6100e160048036038101906100dc9190610fe7565b6107b2565b6040516100ee919061124f565b60405180910390f35b610111600480360381019061010c9190610fe7565b610b9e565b005b61011b610c96565b73ffffffffffffffffffffffffffffffffffffffff16610139610789565b73ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101869061122f565b60405180910390fd5b6101bb7fc46680e171c97e9e391751e4bb158b41b752705d2728ceaf51afda7431f083a860001b610c9e565b6101e77ff70a877c4c46b8076b7afe719bec6afe671ce739c50c52a5b9b9f2171ad77f2660001b610c9e565b6102137f6339f9c4338c8474a99bc78bf037c1f6f06605f884ffd7928457591f7676203f60001b610c9e565b61021b610d65565b6102477fa207a937b3ec6c51d8ded830e001be0ffad9eb70c05e55b1a9d7743320c2317260001b610c9e565b6102737f1c0c7fd9f6261be9383477786dbad0ef75b4212e5ebd7f4152e9493f4492c77a60001b610c9e565b8190506102a27fdab44c2d29059657edcd5395d79e9bbf15f90369a8557b56d07b84f9d6662c0a60001b610c9e565b6102ce7fccebfc3f004b1518027ec9e5d975d3199276eaefcc72ce3c7df82e643774160d60001b610c9e565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061032a929190610de2565b506020820151816001019080519060200190610347929190610de2565b506040820151816002019080519060200190610364929190610de2565b5060608201518160030160006101000a81548160ff021916908360038111156103b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b610412610c96565b73ffffffffffffffffffffffffffffffffffffffff16610430610789565b73ffffffffffffffffffffffffffffffffffffffff1614610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047d9061122f565b60405180910390fd5b6104b27f91ca84b299900ac06cb58ec665564332a5be14c9bd78d0e6c20274914a729dd860001b610c9e565b6104de7f6cb5cb44721569bc5e6e673f19029e55916b7b47aabeb2753f4a4f07ffc346af60001b610c9e565b61050a7f132df8219ad542fe9b360268005253f9ebf9e2b127823d9999d87c7497214afb60001b610c9e565b610512610d65565b61053e7f11e7018cbed839b5a6abe9d30459c53de0bed4400d1f2247e16cece5ccfba88d60001b610c9e565b61056a7ff27d06cf2d4ba86690a2d943b00eb8b1109d7d42895bedfb341afa9c7942373960001b610c9e565b8190506105997f2700c4a01460077e2074c748934f5adfd3d27751d917db4f2eba553491d6cdd660001b610c9e565b6105c57fa60df87582eb9680edca1d11161a67ee5df8da079d154414462e20a3a3c1403c60001b610c9e565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610621929190610de2565b50602082015181600101908051906020019061063e929190610de2565b50604082015181600201908051906020019061065b929190610de2565b5060608201518160030160006101000a81548160ff021916908360038111156106ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b610709610c96565b73ffffffffffffffffffffffffffffffffffffffff16610727610789565b73ffffffffffffffffffffffffffffffffffffffff161461077d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107749061122f565b60405180910390fd5b6107876000610ca1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ba610d65565b6107c2610c96565b73ffffffffffffffffffffffffffffffffffffffff166107e0610789565b73ffffffffffffffffffffffffffffffffffffffff1614610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d9061122f565b60405180910390fd5b6108627f5120468e723490a9799bacb9cc97f76d563bef3ffe034b164ed2f88fc0d35bd860001b610c9e565b61088e7fa3fffb6a1cae714afb90ff03e0c6ab174c9bfccfc578e0778e2d499adc87a10560001b610c9e565b6108ba7f390d45a5721ea2a00fdba88bf35cded81666e77d7f30b1c5b639feb967be13f860001b610c9e565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461091490611398565b80601f016020809104026020016040519081016040528092919081815260200182805461094090611398565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b505050505081526020016001820180546109a690611398565b80601f01602080910402602001604051908101604052809291908181526020018280546109d290611398565b8015610a1f5780601f106109f457610100808354040283529160200191610a1f565b820191906000526020600020905b815481529060010190602001808311610a0257829003601f168201915b50505050508152602001600282018054610a3890611398565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6490611398565b8015610ab15780601f10610a8657610100808354040283529160200191610ab1565b820191906000526020600020905b815481529060010190602001808311610a9457829003601f168201915b505050505081526020016003820160009054906101000a900460ff166003811115610b05577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115610b3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b610ba6610c96565b73ffffffffffffffffffffffffffffffffffffffff16610bc4610789565b73ffffffffffffffffffffffffffffffffffffffff1614610c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c119061122f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c819061120f565b60405180910390fd5b610c9381610ca1565b50565b600033905090565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a0016040528060608152602001606081526020016060815260200160006003811115610dbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054610dee90611398565b90600052602060002090601f016020900481019282610e105760008555610e57565b82601f10610e2957805160ff1916838001178555610e57565b82800160010185558215610e57579182015b82811115610e56578251825591602001919060010190610e3b565b5b509050610e649190610e68565b5090565b5b80821115610e81576000816000905550600101610e69565b5090565b6000610e98610e93846112a2565b611271565b905082815260208101848484011115610eb057600080fd5b610ebb848285611356565b509392505050565b600081359050610ed28161147c565b92915050565b600081359050610ee781611493565b92915050565b600082601f830112610efe57600080fd5b8135610f0e848260208601610e85565b91505092915050565b600060a08284031215610f2957600080fd5b610f3360a0611271565b9050600082013567ffffffffffffffff811115610f4f57600080fd5b610f5b84828501610eed565b600083015250602082013567ffffffffffffffff811115610f7b57600080fd5b610f8784828501610eed565b602083015250604082013567ffffffffffffffff811115610fa757600080fd5b610fb384828501610eed565b6040830152506060610fc784828501610ed8565b6060830152506080610fdb84828501610ec3565b60808301525092915050565b600060208284031215610ff957600080fd5b600061100784828501610ec3565b91505092915050565b6000806040838503121561102357600080fd5b600061103185828601610ec3565b925050602083013567ffffffffffffffff81111561104e57600080fd5b61105a85828601610f17565b9150509250929050565b61106d816112ff565b82525050565b61107c816112ff565b82525050565b61108b81611344565b82525050565b600061109c826112d2565b6110a681856112dd565b93506110b6818560208601611365565b6110bf81611457565b840191505092915050565b60006110d76026836112ee565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061113d6020836112ee565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060a083016000830151848203600086015261118d8282611091565b915050602083015184820360208601526111a78282611091565b915050604083015184820360408601526111c18282611091565b91505060608301516111d66060860182611082565b5060808301516111e96080860182611064565b508091505092915050565b60006020820190506112096000830184611073565b92915050565b60006020820190508181036000830152611228816110ca565b9050919050565b6000602082019050818103600083015261124881611130565b9050919050565b600060208201905081810360008301526112698184611170565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561129857611297611428565b5b8060405250919050565b600067ffffffffffffffff8211156112bd576112bc611428565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061130a82611324565b9050919050565b600081905061131f82611468565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061134f82611311565b9050919050565b82818337600083830152505050565b60005b83811015611383578082015181840152602081019050611368565b83811115611392576000848401525b50505050565b600060028204905060018216806113b057607f821691505b602082108114156113c4576113c36113f9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60048110611479576114786113ca565b5b50565b611485816112ff565b811461149057600080fd5b50565b600481106114a057600080fd5b5056fea264697066735822122034f8a0d3112349310509a5779ddab1e6cb348900681274204147da380ef709b264736f6c63430008000033";

type VehicleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VehicleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vehicle__factory extends ContractFactory {
  constructor(...args: VehicleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vehicle> {
    return super.deploy(overrides || {}) as Promise<Vehicle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Vehicle {
    return super.attach(address) as Vehicle;
  }
  connect(signer: Signer): Vehicle__factory {
    return super.connect(signer) as Vehicle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VehicleInterface {
    return new utils.Interface(_abi) as VehicleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vehicle {
    return new Contract(address, _abi, signerOrProvider) as Vehicle;
  }
}
